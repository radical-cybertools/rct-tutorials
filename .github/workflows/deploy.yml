name: Deploy RADICAL-Tutorials container
on:
  workflow_call

env:
  TUTORIAL_TAG: radicalcybertools/tutorials:latest
  TUTORIAL_IMAGE_NAME: tutorial_image

jobs:

  build:
    name: Build container locally
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - uses: docker/setup-buildx-action@v3
    - uses: docker/build-push-action@v6
      with:
        context: ./src/
        file: ./docker/Dockerfile
        build-args: |
          TUTORIAL_NAME=latest
        tags: ${{ env.TUTORIAL_TAG }}
        outputs: type=docker,dest=/tmp/${{ env.TUTORIAL_IMAGE_NAME }}.tar
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.TUTORIAL_IMAGE_NAME }}
        path: /tmp/${{ env.TUTORIAL_IMAGE_NAME }}.tar

  tests:
    name: Test tutorials from docker container
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        tutorial: ['radical-pilot', 'radical-entk', 'parsl-rp', 'deepdrivemd']
    env:
      TARGET_PATH: /tutorials/${{ matrix.tutorial }}/*.ipynb
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ env.TUTORIAL_IMAGE_NAME }}
        path: /tmp
    - name: Load tutorial image
      run: |
        docker load --input /tmp/${{ env.TUTORIAL_IMAGE_NAME }}.tar
        docker image ls -a
    - name: Run tutorials
      run: |
        docker run ${{ env.TUTORIAL_TAG }} bash -c "\
        jupyter nbconvert --clear-output --inplace ${{ TARGET_PATH }} && \
        jupyter nbconvert --to notebook --execute --inplace ${{ TARGET_PATH }}"

  deploy:
    name: Push docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - uses: docker/build-push-action@v6
      # use this, or run script ./docker/push-multi-platform.sh
      with:
        context: ./src/
        file: ./docker/Dockerfile
        build-args: |
          TUTORIAL_NAME=latest
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.TUTORIAL_TAG }}
    - name: Inspect
      run: |
        docker image inspect ${{ env.TUTORIAL_TAG }}

